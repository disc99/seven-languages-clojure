(every? number? [1 2 3 :four])
(every? number? [1 2 3])
(some nil? [1 2 nil])
(some nil? [1 2])
(not-ecery? odd? [1 3 5])
(not-every? odd? [1 3 5])
(not-every? odd? [:1])
(not-every? odd? [1])
(not-every? odd? ["a"])
(not-every? odd? [1])
(def words ["luke" "chewie" "han" "lando"])
(filter (fn [word] (> (count word) 4) words)
(filter (fn [word] (> (count word) 4)) words)
(def colors ["red" "blue"])
(def toys ["block" "car"])
(for [x colors] (str "I like " x))
(for [x color, y toys] (str "I like " x " " y "s"))
(for [x colors, y toys] (str "I like " x " " y "s"))
(defn small-word? [w] (< (count w) 4))
(for [x colors, y toys, :when (small-words? y)] (str "I like " x " " y "s"))
(for [x colors, y toys, :when (small-word? y)] (str "I like " x " " y "s"))
